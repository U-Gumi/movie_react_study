{"version":3,"sources":["components/Config.js","components/views/LanderPage/section/MainMovie.js","components/views/LanderPage/section/MovieList.js","components/views/LanderPage/LanderPage.js","components/views/Header/section/Logo.js","components/views/Navi/Navi.js","components/views/Header/Header.js","components/views/FavoritesPage/FavoritesPage.js","components/views/SearchPage/p/ModalPop.js","components/views/SearchPage/SearchPage.js","components/views/MyPage/MyPage.js","components/views/DetailPage/section/Cast.js","components/views/DetailPage/section/Video.js","components/views/DetailPage/section/MovieDetail.js","components/views/DetailPage/section/SimilarMovies.js","components/views/DetailPage/section/DetailMainVisual.js","components/views/DetailPage/DetailPage.js","components/App.js","serviceWorker.js","index.js"],"names":["API_KEY","API_URL","IMAGE_BASE_URL","MainMovie","props","className","style","backgroundImage","mainImage","backdrop_path","original_title","overview","withRouter","onClick","e","history","push","target","parentNode","dataset","id","window","location","reload","data-id","movieInfo","poster_path","disabled","defaultValue","vote_average","TabPane","Tabs","LanderPage","tabList","name","urlKey","useState","MainMovieImage","setMainMovieImage","MainMovieList","setMainMovieList","TabKey","setTabKey","Page","setPage","getMovieList","_Page","endpoint","Axios","get","then","response","data","results","Number","page","onClickHandler","useEffect","defaultActiveKey","onChange","key","map","item","idx","tab","dataLength","length","next","hasMore","gutter","xs","sm","md","lg","xl","Logo","to","Navi","theme","mode","defaultSelectedKeys","Item","icon","HomeOutlined","StarOutlined","UserOutlined","Search","Input","placeholder","onSearch","value","width","type","FavoritesPage","visible","Visible","setVisible","onClickDetailPage","title","footer","onCancel","onClose","known_for","i","media_type","span","src","searchWord","match","params","List","setList","getSearchList","ModalInfo","setModalInfo","console","log","alt","profile_path","MyPage","Panel","Collapse","Cast","getList","itemLayout","dataSource","renderItem","Meta","avatar","description","character","job","header","cast","crew","Video","MovieDetail","tagline","genres","href","homepage","runtime","release_date","dataVideos","SimilarMovies","DetailMainVisual","Math","round","popularity","setMainMovie","CreditsInfo","setCreditsInfo","Videos","setVideos","Similar","setSimilar","movId","credits","videos","similar","component","Header","Layout","Sider","Content","App","Collapsed","setCollapsed","trigger","collapsible","collapsed","collapsedWidth","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","exact","path","DetailPage","SearchPage","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.96f13333.chunk.js","sourcesContent":["/** @format */\r\n\r\nexport const API_KEY = \"660b23621fced3d4e50247c34d107d94\"\r\nexport const API_URL = \"https://api.themoviedb.org/3/\"\r\nexport const IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/\"\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport { IMAGE_BASE_URL } from \"../../../Config\"\r\n\r\nfunction MainMovie(props) {\r\n    return (\r\n        <div\r\n            className=\"movie-main-content\"\r\n            style={{\r\n                backgroundImage: `url(${IMAGE_BASE_URL}w1280/${props.mainImage.backdrop_path})`,\r\n            }}\r\n        >\r\n            <div className=\"movie-main-text-box\">\r\n                <strong className=\"title\">\r\n                    {props.mainImage.original_title}\r\n                </strong>\r\n                <p className=\"desc\">{props.mainImage.overview}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainMovie\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport { IMAGE_BASE_URL } from \"../../../Config\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { Rate } from \"antd\"\r\nfunction MovieList(props) {\r\n    function onClickDetailPage(e) {\r\n        props.history.push(`/detail/${e.target.parentNode.dataset.id}`)\r\n        window.location.reload()\r\n    }\r\n    return (\r\n        <div\r\n            className=\"movie-list\"\r\n            onClick={onClickDetailPage}\r\n            data-id={props.movieInfo.id}\r\n        >\r\n            <div\r\n                className=\"movie-img\"\r\n                style={{\r\n                    backgroundImage: `url(${IMAGE_BASE_URL}w500/${props.movieInfo.poster_path})`,\r\n                }}\r\n            ></div>\r\n            <div className=\"movie-info\">\r\n                <strong className=\"title\">\r\n                    {props.movieInfo.original_title}\r\n                </strong>\r\n                <p className=\"desc\">{props.movieInfo.overview}</p>\r\n            </div>\r\n            <div className=\"hover-box\">\r\n                <Rate\r\n                    disabled\r\n                    defaultValue={props.movieInfo.vote_average / 2}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(MovieList)\r\n","/** @format */\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport MainMovie from \"./section/MainMovie\"\r\nimport { API_URL, API_KEY } from \"../../Config\"\r\nimport MovieList from \"./section/MovieList\"\r\nimport Axios from \"axios\"\r\nimport { Tabs, Row, Col } from \"antd\"\r\nimport InfiniteScroll from \"react-infinite-scroll-component\"\r\n\r\nconst { TabPane } = Tabs\r\n\r\nfunction LanderPage(props) {\r\n    const tabList = [\r\n        {\r\n            name: \"현재상영작\",\r\n            urlKey: \"now_playing\",\r\n        },\r\n        {\r\n            name: \"인기순 영화\",\r\n            urlKey: \"popular\",\r\n        },\r\n        {\r\n            name: \"평점순 영화\",\r\n            urlKey: \"top_rated\",\r\n        },\r\n        {\r\n            name: \"상영예정 영화\",\r\n            urlKey: \"upcoming\",\r\n        },\r\n    ]\r\n    const [MainMovieImage, setMainMovieImage] = useState(null)\r\n    const [MainMovieList, setMainMovieList] = useState([])\r\n    const [TabKey, setTabKey] = useState(tabList[0].urlKey)\r\n    const [Page, setPage] = useState(1)\r\n    useEffect(\r\n        function () {\r\n            getMovieList(1)\r\n        },\r\n        [TabKey]\r\n    )\r\n\r\n    function getMovieList(_Page) {\r\n        const endpoint = `${API_URL}movie/${TabKey}?api_key=${API_KEY}&page=${_Page}&language=ko`\r\n        Axios.get(endpoint).then(function (response) {\r\n            if (_Page > 1) {\r\n                setMainMovieList([...MainMovieList, ...response.data.results])\r\n            } else {\r\n                setMainMovieImage(response.data.results[0])\r\n                setMainMovieList([...response.data.results])\r\n            }\r\n            setPage(Number(response.data.page) + 1)\r\n        })\r\n    }\r\n    function callback(key) {\r\n        setTabKey(tabList[key].urlKey)\r\n    }\r\n    function onClickHandler() {\r\n        getMovieList(Page)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"0\" onChange={callback}>\r\n                {tabList.map(function (item, idx) {\r\n                    return (\r\n                        <TabPane tab={item.name} key={idx}>\r\n                            {MainMovieImage && (\r\n                                <MainMovie\r\n                                    mainImage={MainMovieImage}\r\n                                ></MainMovie>\r\n                            )}\r\n                            <div className=\"movie-list-content\">\r\n                                <InfiniteScroll\r\n                                    dataLength={MainMovieList.length}\r\n                                    next={onClickHandler}\r\n                                    hasMore={true}\r\n                                    // loader={<h4>Loading...</h4>}\r\n                                >\r\n                                    <Row gutter={[16, 24]}>\r\n                                        {MainMovieList &&\r\n                                            MainMovieList.map(function (\r\n                                                item,\r\n                                                idx\r\n                                            ) {\r\n                                                return (\r\n                                                    <Col\r\n                                                        key={idx}\r\n                                                        xs={24}\r\n                                                        sm={12}\r\n                                                        md={8}\r\n                                                        lg={6}\r\n                                                        xl={6}\r\n                                                    >\r\n                                                        <MovieList\r\n                                                            movieInfo={item}\r\n                                                            key={idx}\r\n                                                        ></MovieList>\r\n                                                    </Col>\r\n                                                )\r\n                                            })}\r\n                                    </Row>\r\n                                </InfiniteScroll>\r\n                                {/* <button\r\n                                    type=\"button\"\r\n                                    className=\"btn\"\r\n                                    onClick={onClickHandler}\r\n                                >\r\n                                    더보기\r\n                                </button> */}\r\n                            </div>\r\n                        </TabPane>\r\n                    )\r\n                })}\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LanderPage\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nfunction Logo() {\r\n    return (\r\n        <Link to=\"/\">\r\n            <div className=\"logo\">\r\n                <h1>LOGO</h1>\r\n                {/* <img scr=\"\" alt=\"로고\"></img> */}\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport \"./Navi.css\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Menu } from \"antd\"\r\nimport { HomeOutlined, UserOutlined, StarOutlined } from \"@ant-design/icons\"\r\n\r\nfunction Navi() {\r\n    return (\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item key=\"1\" icon={<HomeOutlined />}>\r\n                <Link to=\"/\">영화목록</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<StarOutlined />}>\r\n                <Link to=\"/favorites\">즐겨찾기</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<UserOutlined />}>\r\n                <Link to=\"/mypage\">마이페이지</Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default Navi\r\n","/** @format */\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport \"./Header.css\"\r\n// import Search from \"./section/Search\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { Input } from \"antd\"\r\nfunction Header(props) {\r\n    const { Search } = Input\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <form className=\"form-search\">\r\n                <Search\r\n                    placeholder=\"input search text\"\r\n                    onSearch={function (value) {\r\n                        props.history.push(`/search/${value}`)\r\n                        window.location.reload()\r\n                    }}\r\n                    style={{ width: 200 }}\r\n                />\r\n            </form>\r\n            <div className=\"btn-box\">\r\n                <Link to=\"/login\">\r\n                    <button type=\"button\" className=\"btn\">\r\n                        LOGIN\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import React from 'react'\r\n\r\nfunction FavoritesPage() {\r\n    return (\r\n        <div>\r\n            즐겨찾기FavoritesPageFavoritesPageFavoritesPage\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritesPage\r\n","/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { Modal, Row, Col } from \"antd\"\r\nimport { IMAGE_BASE_URL } from \"../../../Config\"\r\nimport { withRouter } from \"react-router-dom\"\r\nfunction ModalPop(props) {\r\n    const [Visible, setVisible] = useState(props.data.visible)\r\n    function onClickDetailPage(e) {\r\n        props.history.push(`/detail/${e.target.parentNode.dataset.id}`)\r\n        window.location.reload()\r\n    }\r\n    function handleCancel(e) {\r\n        setVisible(false)\r\n        props.onClose()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title={props.data.name}\r\n            visible={Visible}\r\n            footer={null}\r\n            onCancel={handleCancel}\r\n        >\r\n            <Row gutter={[16, 16]} className=\"search-movie-list\">\r\n                {props.data.known_for.map(function (item, i) {\r\n                    if (item.media_type == \"movie\" && item.poster_path) {\r\n                        return (\r\n                            <Col className=\"list-item\" key={i} span={8}>\r\n                                <div\r\n                                    className=\"image-box\"\r\n                                    data-id={item.id}\r\n                                    onClick={onClickDetailPage}\r\n                                >\r\n                                    <img\r\n                                        src={`${IMAGE_BASE_URL}w300/${item.poster_path}`}\r\n                                    ></img>\r\n                                </div>\r\n                            </Col>\r\n                        )\r\n                    }\r\n                })}\r\n            </Row>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default withRouter(ModalPop)\r\n","/** @format */\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from \"../../Config\"\r\nimport Axios from \"axios\"\r\nimport { Row, Col } from \"antd\"\r\nimport ModalPop from \"./p/ModalPop\"\r\nimport InfiniteScroll from \"react-infinite-scroll-component\"\r\nfunction SearchPage(props) {\r\n    const searchWord = props.match.params.searchWord\r\n    const [List, setList] = useState([])\r\n    const [Page, setPage] = useState(1)\r\n    function onClickDetailPage(e) {\r\n        props.history.push(`/detail/${e.target.parentNode.dataset.id}`)\r\n        window.location.reload()\r\n    }\r\n    useEffect(function () {\r\n        getSearchList(1)\r\n    }, [])\r\n    const [ModalInfo, setModalInfo] = useState(null)\r\n    function closeHandler() {\r\n        setModalInfo(null)\r\n    }\r\n    function getSearchList(_Page) {\r\n        const endpoint = `${API_URL}search/multi?api_key=${API_KEY}&query=${searchWord}&page=${_Page}&language=ko`\r\n        Axios.get(endpoint).then(function (response) {\r\n            if (_Page > 1) {\r\n                setList([...List, ...response.data.results])\r\n            } else {\r\n                setList([...response.data.results])\r\n            }\r\n            setPage(Number(response.data.page) + 1)\r\n        })\r\n    }\r\n    function onClickHandler() {\r\n        getSearchList(Page)\r\n    }\r\n    console.log(List, \"list\")\r\n    return (\r\n        <div>\r\n            {ModalInfo && (\r\n                <ModalPop data={ModalInfo} onClose={closeHandler}></ModalPop>\r\n            )}\r\n            <h2>\"{searchWord}\"</h2>\r\n            {List && (\r\n                <InfiniteScroll\r\n                    dataLength={List.length}\r\n                    next={onClickHandler}\r\n                    hasMore={true}\r\n                    // loader={<h4>Loading...</h4>}\r\n                >\r\n                    <Row gutter={[16, 16]} className=\"search-movie-list\">\r\n                        {List.map(function (item, idx) {\r\n                            if (\r\n                                item.media_type === \"movie\" &&\r\n                                item.poster_path\r\n                            ) {\r\n                                return (\r\n                                    <Col\r\n                                        className=\"list-item\"\r\n                                        key={idx}\r\n                                        xs={12}\r\n                                        sm={8}\r\n                                        md={4}\r\n                                        lg={4}\r\n                                    >\r\n                                        <div\r\n                                            className=\"image-box\"\r\n                                            onClick={onClickDetailPage}\r\n                                            data-id={item.id}\r\n                                        >\r\n                                            <strong className=\"tit-type\">\r\n                                                # {item.media_type}\r\n                                            </strong>\r\n                                            <img\r\n                                                src={`${IMAGE_BASE_URL}w300/${item.poster_path}`}\r\n                                                alt={item.title}\r\n                                            ></img>\r\n                                        </div>\r\n                                    </Col>\r\n                                )\r\n                            } else if (\r\n                                item.media_type === \"person\" &&\r\n                                item.profile_path\r\n                            ) {\r\n                                return (\r\n                                    <Col\r\n                                        className=\"list-item\"\r\n                                        key={idx}\r\n                                        xs={12}\r\n                                        sm={8}\r\n                                        md={4}\r\n                                        lg={4}\r\n                                    >\r\n                                        <div\r\n                                            className=\"image-box\"\r\n                                            onClick={function () {\r\n                                                item.visible = true\r\n                                                setModalInfo(item)\r\n                                            }}\r\n                                        >\r\n                                            <strong className=\"tit-type\">\r\n                                                # {item.media_type}\r\n                                            </strong>\r\n                                            <img\r\n                                                src={`${IMAGE_BASE_URL}w300/${item.profile_path}`}\r\n                                                alt={item.title}\r\n                                            ></img>\r\n                                        </div>\r\n                                    </Col>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </Row>\r\n                </InfiniteScroll>\r\n            )}\r\n            {/* <button type=\"button\" className=\"btn\" onClick={onClickHandler}>\r\n                더보기\r\n            </button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchPage)\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\n\r\nfunction MyPage() {\r\n    return <div>마이페이지이이이MyPageMyPageMyPageMyPageMyPageMyPageMyPage</div>\r\n}\r\n\r\nexport default MyPage\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport { IMAGE_BASE_URL } from \"../../../Config\"\r\nimport { List, Avatar, Collapse } from \"antd\"\r\n\r\nconst { Panel } = Collapse\r\nfunction Cast(props) {\r\n    function getList(data) {\r\n        return (\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                renderItem={(item) => {\r\n                    if (item.profile_path) {\r\n                        return (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    avatar={\r\n                                        <Avatar\r\n                                            src={`${IMAGE_BASE_URL}w300/${item.profile_path}`}\r\n                                        />\r\n                                    }\r\n                                    title={item.name}\r\n                                    description={\r\n                                        item.character\r\n                                            ? item.character\r\n                                            : item.job\r\n                                    }\r\n                                />\r\n                            </List.Item>\r\n                        )\r\n                    }\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"cast-info-content\">\r\n            <Collapse defaultActiveKey={[\"1\"]}>\r\n                <Panel header=\"cast\" key=\"1\">\r\n                    {getList(props.data.cast)}\r\n                </Panel>\r\n                <Panel header=\"crew\" key=\"2\">\r\n                    {getList(props.data.crew)}\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cast\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\n\r\nfunction Video(props) {\r\n    return (\r\n        <div className=\"vidio-box\">\r\n            {props.data.map(function (item, idx) {\r\n                return (\r\n                    <iframe\r\n                        src={`https://www.youtube.com/embed/${item.key}`}\r\n                    ></iframe>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport Video from \"./Video\"\r\nfunction MovieDetail(props) {\r\n    return (\r\n        <div className=\"movie-detail-content\">\r\n            <h3 className=\"tag-line\">{props.data.tagline}</h3>\r\n            <p className=\"desc\">{props.data.overview}</p>\r\n            <ul className=\"detail-info-list\">\r\n                <li>\r\n                    <strong>장르</strong>\r\n                    {props.data.genres.map(function (item, idx) {\r\n                        return props.data.genres[idx].name + \" , \"\r\n                    })}\r\n                </li>\r\n                <li>\r\n                    <strong>공식사이트</strong>\r\n                    <a href={props.data.homepage} target=\"_blank\">\r\n                        {props.data.homepage}\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <strong>평점</strong> {props.data.vote_average}점\r\n                </li>\r\n                <li>\r\n                    <strong>상영시간</strong> {props.data.runtime}분\r\n                </li>\r\n                <li>\r\n                    <strong>개봉일</strong> {props.data.release_date}\r\n                </li>\r\n            </ul>\r\n            <Video data={props.dataVideos.results}></Video>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetail\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport MovieList from \"../../LanderPage/section/MovieList\"\r\nimport { Row, Col } from \"antd\"\r\nfunction SimilarMovies(props) {\r\n    return (\r\n        <div>\r\n            <Row gutter={[16, 24]}>\r\n                {props.data.results &&\r\n                    props.data.results.map(function (item, idx) {\r\n                        return (\r\n                            <Col\r\n                                key={idx}\r\n                                xs={24}\r\n                                sm={24}\r\n                                md={12}\r\n                                lg={8}\r\n                                xl={8}\r\n                            >\r\n                                <MovieList\r\n                                    movieInfo={item}\r\n                                    key={idx}\r\n                                ></MovieList>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimilarMovies\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport { IMAGE_BASE_URL } from \"../../../Config\"\r\nfunction DetailMainVisual(props) {\r\n    return (\r\n        <div className=\"detail-main-visual\">\r\n            <div\r\n                className=\"bg-content\"\r\n                style={{\r\n                    backgroundImage: `url(${IMAGE_BASE_URL}w1280${props.data.backdrop_path})`,\r\n                }}\r\n            ></div>\r\n            <h3 className=\"title\">{props.data.original_title}</h3>\r\n            <ul className=\"info-list\">\r\n                <li>\r\n                    <strong className=\"tit\">POPULARITY</strong>\r\n                    <span className=\"info\">\r\n                        <strong>{Math.round(props.data.popularity)}</strong>%\r\n                    </span>\r\n                </li>\r\n                <li>\r\n                    <strong className=\"tit\">RUNTIME</strong>\r\n                    <span className=\"info\">\r\n                        <strong>{props.data.runtime}</strong>분\r\n                    </span>\r\n                </li>\r\n                <li>\r\n                    <strong className=\"tit\">VOTE AVERAGE</strong>\r\n                    <span className=\"info\">\r\n                        <strong>{props.data.vote_average}</strong>점\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n            <div className=\"image-box\">\r\n                <img\r\n                    src={`${IMAGE_BASE_URL}w300${props.data.poster_path}`}\r\n                ></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailMainVisual\r\n","/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { API_URL, API_KEY } from \"../../Config\"\r\nimport Axios from \"axios\"\r\nimport { Tabs } from \"antd\"\r\nimport Cast from \"./section/Cast\"\r\nimport MovieDetail from \"./section/MovieDetail\"\r\nimport SimilarMovies from \"./section/SimilarMovies\"\r\nimport DetailMainVisual from \"./section/DetailMainVisual\"\r\nconst { TabPane } = Tabs\r\n\r\nfunction DetailPage(props) {\r\n    const [MainMovie, setMainMovie] = useState(null)\r\n    const [CreditsInfo, setCreditsInfo] = useState(null)\r\n    const [Videos, setVideos] = useState(null)\r\n    const [Similar, setSimilar] = useState(null)\r\n    const movId = props.match.params.movId\r\n    const endpoint = `${API_URL}movie/${movId}?api_key=${API_KEY}&language=ko`\r\n    const credits = `${API_URL}movie/${movId}/credits?api_key=${API_KEY}&language=ko`\r\n    const videos = `${API_URL}movie/${movId}/videos?api_key=${API_KEY}&language=ko`\r\n    const similar = `${API_URL}movie/${movId}/similar?api_key=${API_KEY}&language=ko`\r\n    useEffect(function () {\r\n        Axios.get(endpoint).then(function (response) {\r\n            setMainMovie(response.data)\r\n        })\r\n        Axios.get(credits).then(function (response) {\r\n            setCreditsInfo(response.data)\r\n        })\r\n        Axios.get(videos).then(function (response) {\r\n            setVideos(response.data)\r\n        })\r\n        Axios.get(similar).then(function (response) {\r\n            setSimilar(response.data)\r\n        })\r\n    }, [])\r\n    let tabList = [\r\n        {\r\n            name: \"영화상세정보\",\r\n            component: Videos && (\r\n                <MovieDetail data={MainMovie} dataVideos={Videos} />\r\n            ),\r\n        },\r\n        {\r\n            name: \"출연진\",\r\n            component: CreditsInfo && <Cast data={CreditsInfo} />,\r\n        },\r\n        {\r\n            name: \"유사 영화\",\r\n            component: Similar && <SimilarMovies data={Similar} />,\r\n        },\r\n    ]\r\n    return (\r\n        <div className=\"movie-detail-content\">\r\n            {MainMovie && (\r\n                <DetailMainVisual data={MainMovie}></DetailMainVisual>\r\n            )}\r\n            <Tabs defaultActiveKey=\"0\">\r\n                {MainMovie &&\r\n                    tabList.map(function (item, idx) {\r\n                        return (\r\n                            <TabPane tab={item.name} key={idx}>\r\n                                {item.component}\r\n                            </TabPane>\r\n                        )\r\n                    })}\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(DetailPage)\r\n","/** @format */\n\nimport React, { useState } from \"react\"\nimport \"./App.css\"\nimport LanderPage from \"./views/LanderPage/LanderPage\"\nimport Logo from \"./views/Header/section/Logo\"\nimport Navi from \"./views/Navi/Navi\"\nimport CHeader from \"./views/Header/Header\"\nimport FavoritesPage from \"./views/FavoritesPage/FavoritesPage\"\nimport SearchPage from \"./views/SearchPage/SearchPage\"\nimport MyPage from \"./views/MyPage/MyPage\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\nimport \"antd/dist/antd.css\"\nimport { Layout, BackTop } from \"antd\"\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\"\nimport DetailPage from \"./views/DetailPage/DetailPage\"\nconst { Header, Sider, Content } = Layout\n\nfunction App() {\n    const [Collapsed, setCollapsed] = useState(true)\n    function toggle() {\n        setCollapsed(!Collapsed)\n    }\n    return (\n        <div className=\"App\">\n            <Router>\n                <Layout>\n                    <Sider\n                        trigger={null}\n                        collapsible\n                        collapsed={Collapsed}\n                        collapsedWidth=\"0\"\n                        onClick={function () {\n                            setCollapsed(!Collapsed)\n                        }}\n                    >\n                        <Logo></Logo>\n                        <Navi></Navi>\n                    </Sider>\n                    <Layout className=\"site-layout\">\n                        <Header className=\"site-layout-background\">\n                            {React.createElement(\n                                Collapsed\n                                    ? MenuUnfoldOutlined\n                                    : MenuFoldOutlined,\n                                {\n                                    className: \"trigger\",\n                                    onClick: toggle,\n                                }\n                            )}\n                            <CHeader></CHeader>\n                        </Header>\n                        <Content className=\"site-layout-background\">\n                            <Switch>\n                                <Route exact path=\"/\" component={LanderPage} />\n                                <Route\n                                    path=\"/detail/:movId\"\n                                    component={DetailPage}\n                                />\n                                <Route\n                                    path=\"/favorites\"\n                                    component={FavoritesPage}\n                                />\n                                <Route path=\"/mypage\" component={MyPage} />\n                                <Route\n                                    path=\"/search/:searchWord\"\n                                    component={SearchPage}\n                                />\n                            </Switch>\n                            <BackTop>\n                                <div className=\"btn-top\">TOP</div>\n                            </BackTop>\n                        </Content>\n                    </Layout>\n                </Layout>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/** @format */\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./components/App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\nserviceWorker.unregister()\n"],"sourceRoot":""}