{"version":3,"sources":["components/Config.js","components/views/LanderPage/section/MainMovie.js","components/views/LanderPage/section/MovieList.js","components/views/LanderPage/LanderPage.js","components/views/Header/section/Logo.js","components/views/Header/Header.js","components/views/SearchPage/section/ModalPop.js","components/views/SearchPage/SearchPage.js","components/views/DetailPage/section/Cast.js","components/views/DetailPage/section/Video.js","components/views/DetailPage/section/Review.js","components/views/DetailPage/section/MovieDetail.js","components/views/DetailPage/section/SimilarMovies.js","components/views/DetailPage/section/DetailMainVisual.js","components/views/DetailPage/DetailPage.js","components/App.js","serviceWorker.js","index.js"],"names":["API_KEY","API_URL","IMAGE_BASE_URL","MainMovie","props","className","style","backgroundImage","mainImage","backdrop_path","withRouter","onClick","e","history","push","target","parentNode","dataset","id","window","location","reload","data-id","movieInfo","poster_path","original_title","overview","disabled","defaultValue","vote_average","TabPane","Tabs","LanderPage","tabList","name","urlKey","useState","MainMovieImage","setMainMovieImage","MainMovieList","setMainMovieList","TabKey","setTabKey","Page","setPage","getMovieList","_Page","endpoint","Axios","get","then","response","data","results","Number","page","onClickHandler","useEffect","defaultActiveKey","onChange","key","map","item","idx","tab","dataLength","length","next","hasMore","gutter","xs","sm","md","lg","xl","Logo","to","Search","Input","placeholder","onSearch","value","width","visible","Visible","setVisible","onClickDetailPage","title","footer","onCancel","onClose","known_for","i","media_type","span","src","searchWord","match","params","List","setList","getSearchList","ModalInfo","setModalInfo","alt","profile_path","Panel","Collapse","Cast","getList","itemLayout","dataSource","renderItem","Item","Meta","avatar","description","character","job","header","cast","crew","Video","Review","total_results","UserOutlined","author","href","url","content","MovieDetail","tagline","genres","homepage","runtime","release_date","dataVideos","dataReview","SimilarMovies","DetailMainVisual","Math","round","popularity","setMainMovie","CreditsInfo","setCreditsInfo","Videos","setVideos","Similar","setSimilar","Reviews","setReviews","movId","credits","videos","similar","reviews","component","Header","Layout","Content","App","exact","path","DetailPage","SearchPage","showUnder","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2c1be8ae.chunk.js","sourcesContent":["/** @format */\r\n\r\nexport const API_KEY = \"660b23621fced3d4e50247c34d107d94\"\r\nexport const API_URL = \"https://api.themoviedb.org/3/\"\r\nexport const IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/\"\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport { IMAGE_BASE_URL } from \"../../../Config\"\r\n\r\nfunction MainMovie(props) {\r\n    return (\r\n        <div\r\n            className=\"movie-main-content\"\r\n            style={{\r\n                backgroundImage: `url(${IMAGE_BASE_URL}w1280/${props.mainImage.backdrop_path})`,\r\n            }}\r\n        ></div>\r\n    )\r\n}\r\n\r\nexport default MainMovie\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport { IMAGE_BASE_URL } from \"../../../Config\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { Rate } from \"antd\"\r\nfunction MovieList(props) {\r\n    function onClickDetailPage(e) {\r\n        props.history.push(`/detail/${e.target.parentNode.dataset.id}`)\r\n        window.location.reload()\r\n    }\r\n    return (\r\n        <div\r\n            className=\"movie-list\"\r\n            onClick={onClickDetailPage}\r\n            data-id={props.movieInfo.id}\r\n        >\r\n            <div\r\n                className=\"movie-img\"\r\n                style={{\r\n                    backgroundImage: `url(${IMAGE_BASE_URL}w500/${props.movieInfo.poster_path})`,\r\n                }}\r\n            ></div>\r\n            <div className=\"movie-info\">\r\n                <strong className=\"title\">\r\n                    {props.movieInfo.original_title}\r\n                </strong>\r\n                <p className=\"desc\">{props.movieInfo.overview}</p>\r\n            </div>\r\n            <div className=\"hover-box\">\r\n                <Rate\r\n                    disabled\r\n                    defaultValue={props.movieInfo.vote_average / 2}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(MovieList)\r\n","/** @format */\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport MainMovie from \"./section/MainMovie\"\r\nimport { API_URL, API_KEY } from \"../../Config\"\r\nimport MovieList from \"./section/MovieList\"\r\nimport Axios from \"axios\"\r\nimport { Tabs, Row, Col } from \"antd\"\r\nimport InfiniteScroll from \"react-infinite-scroll-component\"\r\n\r\nconst { TabPane } = Tabs\r\n\r\nfunction LanderPage(props) {\r\n    const tabList = [\r\n        {\r\n            name: \"현재상영작\",\r\n            urlKey: \"now_playing\",\r\n        },\r\n        {\r\n            name: \"인기순\",\r\n            urlKey: \"popular\",\r\n        },\r\n        {\r\n            name: \"평점순\",\r\n            urlKey: \"top_rated\",\r\n        },\r\n        {\r\n            name: \"상영예정작\",\r\n            urlKey: \"upcoming\",\r\n        },\r\n    ]\r\n    const [MainMovieImage, setMainMovieImage] = useState(null)\r\n    const [MainMovieList, setMainMovieList] = useState([])\r\n    const [TabKey, setTabKey] = useState(tabList[0].urlKey)\r\n    const [Page, setPage] = useState(1)\r\n    useEffect(\r\n        function () {\r\n            getMovieList(1)\r\n        },\r\n        [TabKey]\r\n    )\r\n\r\n    function getMovieList(_Page) {\r\n        const endpoint = `${API_URL}movie/${TabKey}?api_key=${API_KEY}&page=${_Page}&language=ko`\r\n        Axios.get(endpoint).then(function (response) {\r\n            if (_Page > 1) {\r\n                setMainMovieList([...MainMovieList, ...response.data.results])\r\n            } else {\r\n                setMainMovieImage(response.data.results[0])\r\n                setMainMovieList([...response.data.results])\r\n            }\r\n            setPage(Number(response.data.page) + 1)\r\n        })\r\n    }\r\n    function callback(key) {\r\n        setTabKey(tabList[key].urlKey)\r\n    }\r\n    function onClickHandler() {\r\n        getMovieList(Page)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {MainMovieImage && (\r\n                <MainMovie mainImage={MainMovieImage}></MainMovie>\r\n            )}\r\n            <Tabs defaultActiveKey=\"0\" onChange={callback}>\r\n                {tabList.map(function (item, idx) {\r\n                    return (\r\n                        <TabPane tab={item.name} key={idx}>\r\n                            <div className=\"movie-list-content\">\r\n                                <InfiniteScroll\r\n                                    dataLength={MainMovieList.length}\r\n                                    next={onClickHandler}\r\n                                    hasMore={true}\r\n                                >\r\n                                    <Row gutter={[16, 24]}>\r\n                                        {MainMovieList &&\r\n                                            MainMovieList.map(function (\r\n                                                item,\r\n                                                idx\r\n                                            ) {\r\n                                                return (\r\n                                                    <Col\r\n                                                        key={idx}\r\n                                                        xs={24}\r\n                                                        sm={12}\r\n                                                        md={8}\r\n                                                        lg={6}\r\n                                                        xl={6}\r\n                                                    >\r\n                                                        <MovieList\r\n                                                            movieInfo={item}\r\n                                                            key={idx}\r\n                                                        ></MovieList>\r\n                                                    </Col>\r\n                                                )\r\n                                            })}\r\n                                    </Row>\r\n                                </InfiniteScroll>\r\n                                {/* <button\r\n                                    type=\"button\"\r\n                                    className=\"btn\"\r\n                                    onClick={onClickHandler}\r\n                                >\r\n                                    더보기\r\n                                </button> */}\r\n                            </div>\r\n                        </TabPane>\r\n                    )\r\n                })}\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LanderPage\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nfunction Logo() {\r\n    return (\r\n        <Link to=\"/\">\r\n            <div className=\"logo\">\r\n                <h1>LOGO</h1>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport \"./Header.css\"\r\nimport Logo from \"./section/Logo\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { Input } from \"antd\"\r\nfunction Header(props) {\r\n    const { Search } = Input\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Logo></Logo>\r\n            <form className=\"form-search\">\r\n                <Search\r\n                    placeholder=\"input search text\"\r\n                    onSearch={function (value) {\r\n                        props.history.push(`/search/${value}`)\r\n                        window.location.reload()\r\n                    }}\r\n                    style={{ width: 200 }}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header)\r\n","/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { Modal, Row, Col } from \"antd\"\r\nimport { IMAGE_BASE_URL } from \"../../../Config\"\r\nimport { withRouter } from \"react-router-dom\"\r\nfunction ModalPop(props) {\r\n    const [Visible, setVisible] = useState(props.data.visible)\r\n    function onClickDetailPage(e) {\r\n        props.history.push(`/detail/${e.target.parentNode.dataset.id}`)\r\n        window.location.reload()\r\n    }\r\n    function handleCancel(e) {\r\n        setVisible(false)\r\n        props.onClose()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title={props.data.name}\r\n            visible={Visible}\r\n            footer={null}\r\n            onCancel={handleCancel}\r\n        >\r\n            <Row gutter={[16, 16]} className=\"search-movie-list\">\r\n                {props.data.known_for.map(function (item, i) {\r\n                    if (item.media_type == \"movie\" && item.poster_path) {\r\n                        return (\r\n                            <Col className=\"list-item\" key={i} span={8}>\r\n                                <div\r\n                                    className=\"image-box\"\r\n                                    data-id={item.id}\r\n                                    onClick={onClickDetailPage}\r\n                                >\r\n                                    <img\r\n                                        src={`${IMAGE_BASE_URL}w300/${item.poster_path}`}\r\n                                    ></img>\r\n                                </div>\r\n                            </Col>\r\n                        )\r\n                    }\r\n                })}\r\n            </Row>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default withRouter(ModalPop)\r\n","/** @format */\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from \"../../Config\"\r\nimport Axios from \"axios\"\r\nimport { Row, Col } from \"antd\"\r\nimport ModalPop from \"./section/ModalPop\"\r\nimport InfiniteScroll from \"react-infinite-scroll-component\"\r\nfunction SearchPage(props) {\r\n    const searchWord = props.match.params.searchWord\r\n    const [List, setList] = useState([])\r\n    const [Page, setPage] = useState(1)\r\n    function onClickDetailPage(e) {\r\n        props.history.push(`/detail/${e.target.parentNode.dataset.id}`)\r\n        window.location.reload()\r\n    }\r\n    useEffect(function () {\r\n        getSearchList(1)\r\n    }, [])\r\n    const [ModalInfo, setModalInfo] = useState(null)\r\n    function closeHandler() {\r\n        setModalInfo(null)\r\n    }\r\n    function getSearchList(_Page) {\r\n        const endpoint = `${API_URL}search/multi?api_key=${API_KEY}&query=${searchWord}&page=${_Page}&language=ko`\r\n        Axios.get(endpoint).then(function (response) {\r\n            if (_Page > 1) {\r\n                setList([...List, ...response.data.results])\r\n            } else {\r\n                setList([...response.data.results])\r\n            }\r\n            setPage(Number(response.data.page) + 1)\r\n        })\r\n    }\r\n    function onClickHandler() {\r\n        getSearchList(Page)\r\n    }\r\n    return (\r\n        <div>\r\n            {ModalInfo && (\r\n                <ModalPop data={ModalInfo} onClose={closeHandler}></ModalPop>\r\n            )}\r\n            <h2>\"{searchWord}\"</h2>\r\n            {List && (\r\n                <InfiniteScroll\r\n                    dataLength={List.length}\r\n                    next={onClickHandler}\r\n                    hasMore={true}\r\n                >\r\n                    <Row gutter={[16, 16]} className=\"search-movie-list\">\r\n                        {List.map(function (item, idx) {\r\n                            if (\r\n                                item.media_type === \"movie\" &&\r\n                                item.poster_path\r\n                            ) {\r\n                                return (\r\n                                    <Col\r\n                                        className=\"list-item\"\r\n                                        key={idx}\r\n                                        xs={12}\r\n                                        sm={8}\r\n                                        md={4}\r\n                                        lg={4}\r\n                                    >\r\n                                        <div\r\n                                            className=\"image-box\"\r\n                                            onClick={onClickDetailPage}\r\n                                            data-id={item.id}\r\n                                        >\r\n                                            <strong className=\"tit-type\">\r\n                                                # {item.media_type}\r\n                                            </strong>\r\n                                            <img\r\n                                                src={`${IMAGE_BASE_URL}w300/${item.poster_path}`}\r\n                                                alt={item.title}\r\n                                            ></img>\r\n                                        </div>\r\n                                    </Col>\r\n                                )\r\n                            } else if (\r\n                                item.media_type === \"person\" &&\r\n                                item.profile_path\r\n                            ) {\r\n                                return (\r\n                                    <Col\r\n                                        className=\"list-item\"\r\n                                        key={idx}\r\n                                        xs={12}\r\n                                        sm={8}\r\n                                        md={4}\r\n                                        lg={4}\r\n                                    >\r\n                                        <div\r\n                                            className=\"image-box\"\r\n                                            onClick={function () {\r\n                                                item.visible = true\r\n                                                setModalInfo(item)\r\n                                            }}\r\n                                        >\r\n                                            <strong className=\"tit-type\">\r\n                                                # {item.media_type}\r\n                                            </strong>\r\n                                            <img\r\n                                                src={`${IMAGE_BASE_URL}w300/${item.profile_path}`}\r\n                                                alt={item.title}\r\n                                            ></img>\r\n                                        </div>\r\n                                    </Col>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </Row>\r\n                </InfiniteScroll>\r\n            )}\r\n            {/* <button type=\"button\" className=\"btn\" onClick={onClickHandler}>\r\n                더보기\r\n            </button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchPage)\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport { IMAGE_BASE_URL } from \"../../../Config\"\r\nimport { List, Avatar, Collapse } from \"antd\"\r\n\r\nconst { Panel } = Collapse\r\nfunction Cast(props) {\r\n    function getList(data) {\r\n        return (\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                renderItem={(item) => {\r\n                    if (item.profile_path) {\r\n                        return (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    avatar={\r\n                                        <Avatar\r\n                                            src={`${IMAGE_BASE_URL}w300/${item.profile_path}`}\r\n                                        />\r\n                                    }\r\n                                    title={item.name}\r\n                                    description={\r\n                                        item.character\r\n                                            ? item.character\r\n                                            : item.job\r\n                                    }\r\n                                />\r\n                            </List.Item>\r\n                        )\r\n                    }\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"cast-info-content\">\r\n            <Collapse defaultActiveKey={[\"1\"]}>\r\n                <Panel header=\"cast\" key=\"1\">\r\n                    {getList(props.data.cast)}\r\n                </Panel>\r\n                <Panel header=\"crew\" key=\"2\">\r\n                    {getList(props.data.crew)}\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cast\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\n\r\nfunction Video(props) {\r\n    return (\r\n        <div className=\"vidio-box\">\r\n            {props.data.map(function (item, idx) {\r\n                return (\r\n                    <iframe\r\n                        key={idx}\r\n                        src={`https://www.youtube.com/embed/${item.key}`}\r\n                    ></iframe>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport { UserOutlined } from \"@ant-design/icons\"\r\nfunction Review(props) {\r\n    return (\r\n        <div>\r\n            <h4 className=\"content-title\">\r\n                REVIWE ( {props.data.total_results} )\r\n            </h4>\r\n            <ul className=\"review-list\">\r\n                {props.data.results.map(function (item, idx) {\r\n                    return (\r\n                        <li key={idx}>\r\n                            <div className=\"name-box\">\r\n                                <UserOutlined />\r\n                                <strong className=\"name\">{item.author}</strong>\r\n                            </div>\r\n                            <div className=\"desc-box\">\r\n                                <p className=\"desc\">\r\n                                    <a href={item.url} target=\"_blank\">\r\n                                        {item.content}\r\n                                    </a>\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Review\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport Video from \"./Video\"\r\nimport Review from \"./Review\"\r\nfunction MovieDetail(props) {\r\n    return (\r\n        <div className=\"movie-detail-content\">\r\n            <h3 className=\"tag-line\">{props.data.tagline}</h3>\r\n            <p className=\"desc\">{props.data.overview}</p>\r\n            <ul className=\"detail-info-list\">\r\n                <li>\r\n                    <strong>장르</strong>\r\n                    <span>\r\n                        {props.data.genres.map(function (item, idx) {\r\n                            return props.data.genres[idx].name + \" , \"\r\n                        })}\r\n                    </span>\r\n                </li>\r\n                <li>\r\n                    <strong>공식사이트</strong>\r\n                    <span>\r\n                        <a href={props.data.homepage} target=\"_blank\">\r\n                            {props.data.homepage}\r\n                        </a>\r\n                    </span>\r\n                </li>\r\n                <li>\r\n                    <strong>평점</strong>\r\n                    <span>{props.data.vote_average}점</span>\r\n                </li>\r\n                <li>\r\n                    <strong>상영시간</strong>\r\n                    <span>{props.data.runtime}분</span>\r\n                </li>\r\n                <li>\r\n                    <strong>개봉일</strong>\r\n                    <span>{props.data.release_date}</span>\r\n                </li>\r\n            </ul>\r\n            <Video data={props.dataVideos.results}></Video>\r\n            <Review data={props.dataReview}></Review>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetail\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport MovieList from \"../../LanderPage/section/MovieList\"\r\nimport { Row, Col } from \"antd\"\r\nfunction SimilarMovies(props) {\r\n    return (\r\n        <div>\r\n            <Row gutter={[16, 24]}>\r\n                {props.data.results &&\r\n                    props.data.results.map(function (item, idx) {\r\n                        return (\r\n                            <Col key={idx} xs={24} sm={12} md={8} lg={6} xl={6}>\r\n                                <MovieList\r\n                                    movieInfo={item}\r\n                                    key={idx}\r\n                                ></MovieList>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimilarMovies\r\n","/** @format */\r\n\r\nimport React from \"react\"\r\nimport { IMAGE_BASE_URL } from \"../../../Config\"\r\nfunction DetailMainVisual(props) {\r\n    return (\r\n        <div className=\"detail-main-visual\">\r\n            <div\r\n                className=\"bg-content\"\r\n                style={{\r\n                    backgroundImage: `url(${IMAGE_BASE_URL}w1280${props.data.backdrop_path})`,\r\n                }}\r\n            ></div>\r\n            <h3 className=\"title\">{props.data.original_title}</h3>\r\n            <ul className=\"info-list\">\r\n                <li>\r\n                    <strong className=\"tit\">POPULARITY</strong>\r\n                    <span className=\"info\">\r\n                        <strong>{Math.round(props.data.popularity)}</strong>%\r\n                    </span>\r\n                </li>\r\n                <li>\r\n                    <strong className=\"tit\">RUNTIME</strong>\r\n                    <span className=\"info\">\r\n                        <strong>{props.data.runtime}</strong>분\r\n                    </span>\r\n                </li>\r\n                <li>\r\n                    <strong className=\"tit\">VOTE AVERAGE</strong>\r\n                    <span className=\"info\">\r\n                        <strong>{props.data.vote_average}</strong>점\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n            <div className=\"image-box\">\r\n                <img\r\n                    src={`${IMAGE_BASE_URL}w300${props.data.poster_path}`}\r\n                ></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailMainVisual\r\n","/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { API_URL, API_KEY } from \"../../Config\"\r\nimport Axios from \"axios\"\r\nimport { Tabs } from \"antd\"\r\nimport Cast from \"./section/Cast\"\r\nimport MovieDetail from \"./section/MovieDetail\"\r\nimport SimilarMovies from \"./section/SimilarMovies\"\r\nimport DetailMainVisual from \"./section/DetailMainVisual\"\r\nconst { TabPane } = Tabs\r\n\r\nfunction DetailPage(props) {\r\n    const [MainMovie, setMainMovie] = useState(null)\r\n    const [CreditsInfo, setCreditsInfo] = useState(null)\r\n    const [Videos, setVideos] = useState(null)\r\n    const [Similar, setSimilar] = useState(null)\r\n    const [Reviews, setReviews] = useState(null)\r\n    const movId = props.match.params.movId\r\n    const endpoint = `${API_URL}movie/${movId}?api_key=${API_KEY}`\r\n    const credits = `${API_URL}movie/${movId}/credits?api_key=${API_KEY}`\r\n    const videos = `${API_URL}movie/${movId}/videos?api_key=${API_KEY}`\r\n    const similar = `${API_URL}movie/${movId}/similar?api_key=${API_KEY}`\r\n    const reviews = `${API_URL}movie/${movId}/reviews?api_key=${API_KEY}`\r\n    useEffect(function () {\r\n        Axios.get(endpoint).then(function (response) {\r\n            setMainMovie(response.data)\r\n        })\r\n        Axios.get(credits).then(function (response) {\r\n            setCreditsInfo(response.data)\r\n        })\r\n        Axios.get(videos).then(function (response) {\r\n            setVideos(response.data)\r\n        })\r\n        Axios.get(similar).then(function (response) {\r\n            setSimilar(response.data)\r\n        })\r\n        Axios.get(reviews).then(function (response) {\r\n            setReviews(response.data)\r\n        })\r\n    }, [])\r\n    let tabList = [\r\n        {\r\n            name: \"영화상세정보\",\r\n            component: Videos && Reviews && (\r\n                <MovieDetail\r\n                    data={MainMovie}\r\n                    dataVideos={Videos}\r\n                    dataReview={Reviews}\r\n                />\r\n            ),\r\n        },\r\n        {\r\n            name: \"출연진\",\r\n            component: CreditsInfo && <Cast data={CreditsInfo} />,\r\n        },\r\n        {\r\n            name: \"유사 영화\",\r\n            component: Similar && <SimilarMovies data={Similar} />,\r\n        },\r\n    ]\r\n    return (\r\n        <div className=\"movie-detail-content\">\r\n            {MainMovie && (\r\n                <DetailMainVisual data={MainMovie}></DetailMainVisual>\r\n            )}\r\n            <Tabs defaultActiveKey=\"0\">\r\n                {MainMovie &&\r\n                    tabList.map(function (item, idx) {\r\n                        return (\r\n                            <TabPane tab={item.name} key={idx}>\r\n                                {item.component}\r\n                            </TabPane>\r\n                        )\r\n                    })}\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(DetailPage)\r\n","/** @format */\n\nimport React from \"react\"\nimport \"./App.css\"\nimport \"antd/dist/antd.css\"\nimport LanderPage from \"./views/LanderPage/LanderPage\"\nimport InnerHeader from \"./views/Header/Header\"\nimport SearchPage from \"./views/SearchPage/SearchPage\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { Layout } from \"antd\"\nimport DetailPage from \"./views/DetailPage/DetailPage\"\nimport ScrollToTop from \"react-scroll-up\"\nconst { Header, Content } = Layout\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Layout>\n                    <Layout className=\"site-layout\">\n                        <Header className=\"site-layout-background\">\n                            <InnerHeader></InnerHeader>\n                        </Header>\n                        <Content className=\"site-layout-background\">\n                            <Switch>\n                                <Route exact path=\"/\" component={LanderPage} />\n                                <Route\n                                    path=\"/detail/:movId\"\n                                    component={DetailPage}\n                                />\n                                <Route\n                                    path=\"/search/:searchWord\"\n                                    component={SearchPage}\n                                />\n                            </Switch>\n                            <ScrollToTop showUnder={160}>\n                                <span className=\"btn-top\">UP</span>\n                            </ScrollToTop>\n                        </Content>\n                    </Layout>\n                </Layout>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/** @format */\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./components/App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\nserviceWorker.unregister()\n"],"sourceRoot":""}